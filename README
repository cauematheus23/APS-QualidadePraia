# Projeto: API de Monitoramento da Qualidade da √Ågua

[![Status](https://img.shields.io/badge/status-funcional-green)](https://shields.io/)
[![Tecnologia](https://img.shields.io/badge/tecnologia-Docker-blue)](https://shields.io/)

Solu√ß√£o de backend completa para monitorar a qualidade da √°gua de praias, ideal para demonstra√ß√µes e prot√≥tipos.

A aplica√ß√£o √© totalmente conteinerizada com Docker, permitindo uma configura√ß√£o e execu√ß√£o simplificada em qualquer ambiente. A arquitetura inclui uma API RESTful em Python/FastAPI, um banco de dados PostgreSQL e um simulador que gera dados de sensores automaticamente.

## ‚ú® Funcionalidades

* **API RESTful:** Endpoints para ingest√£o e consulta de dados.
* **Simulador Aut√¥nomo:** Gera dados realistas de praias conhecidas (Copacabana, Gonzaga, etc.) e envia para a API.
* **Processamento de Alertas:** Rotina autom√°tica que analisa os dados e gera alertas (Verde, Amarelo, Vermelho) com mensagens amig√°veis.
* **Documenta√ß√£o Interativa:** Interface Swagger UI (`/docs`) para explorar e testar a API.

---

## üîß Pr√©-requisitos

Para executar o projeto, voc√™ precisa apenas de uma ferramenta instalada:

* **Docker Desktop:** Garanta que esteja instalado e em execu√ß√£o.
    * [Download para Windows, Mac e Linux](https://www.docker.com/products/docker-desktop/)

---

## üöÄ Como Rodar o Projeto

Siga estes 3 passos para colocar todo o sistema no ar.

### 1. Obtenha o C√≥digo

Clone este reposit√≥rio para a sua m√°quina local usando o seguinte comando em um terminal:

```bash
git clone <URL_DO_SEU_REPOSITORIO>
2. Entre na Pasta do Projeto
Navegue para o diret√≥rio que voc√™ acabou de clonar.

Bash

cd <NOME_DA_PASTA_DO_PROJETO>
3. Inicie os Servi√ßos
Use o Docker Compose para construir as imagens e iniciar todos os cont√™ineres. Este √© o √∫nico comando que voc√™ precisa para rodar tudo:

Bash

docker compose up --build
Aguarde a inicializa√ß√£o. O terminal exibir√° os logs dos servi√ßos. A primeira vez pode demorar alguns minutos.

‚úÖ Verifica√ß√£o e Teste
Para confirmar que tudo est√° funcionando:

Acesse a documenta√ß√£o da API no seu navegador: http://localhost:8000/docs

Teste os endpoints. Execute o GET /praias/ para ver as praias criadas e o GET /alertas/ para ver os alertas gerados pelo simulador.

üì± Integra√ß√£o com App Inventor
Para que seu aplicativo no celular se conecte √† API que est√° rodando no seu computador, siga estes passos:

1. Encontre o IP do seu Computador
Seu computador e seu celular precisam estar na mesma rede Wi-Fi. O app n√£o entende localhost.

No Windows: Abra o Prompt de Comando (CMD), digite ipconfig e procure pelo "Endere√ßo IPv4" da sua conex√£o (Wi-Fi ou Ethernet).

No macOS/Linux: Abra o terminal, digite ifconfig ou ip a e procure pelo seu endere√ßo de IP (inet).

O IP ser√° algo como 192.168.0.15 ou 192.168.1.10.

2. Configure a URL nos Blocos
Nos blocos do seu App Inventor, onde voc√™ configura a URL dos componentes Web, substitua localhost pelo IP que voc√™ encontrou.

Exemplo:

URL ANTIGA: http://localhost:8000/alertas/

URL CORRETA (exemplo): http://192.168.0.15:8000/alertas/

Firewall: Se o app n√£o conseguir se conectar, o Firewall do seu computador pode estar bloqueando a porta 8000. Crie uma "Regra de Entrada" no Firewall do Windows para permitir conex√µes TCP na porta 8000 ou mude o perfil da sua rede para "Particular".

üõë Como Parar a Aplica√ß√£o
Para parar a execu√ß√£o, volte ao terminal e pressione Ctrl + C.

Para parar e remover os cont√™ineres, execute: docker compose down.