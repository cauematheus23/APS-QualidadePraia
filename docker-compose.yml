services:
  # Shard 1 (IDs √çMPARES)
  db_shard1:
    image: postgres:15
    environment:
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
      POSTGRES_DB: praia_db_shard1
    volumes:
      - pgdata1:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U demo -d praia_db_shard1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Shard 2 (IDs PARES)
  db_shard2:
    image: postgres:15
    environment:
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
      POSTGRES_DB: praia_db_shard2
    volumes:
      - pgdata2:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U demo -d praia_db_shard2"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: ./api
    depends_on:
      db_shard1:
        condition: service_healthy
      db_shard2:
        condition: service_healthy
    environment:
      - DATABASE_URL_SHARD1=postgresql://demo:demo@db_shard1:5432/praia_db_shard1
      - DATABASE_URL_SHARD2=postgresql://demo:demo@db_shard2:5432/praia_db_shard2
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  simulator:
    build: ./simulator
    depends_on:
      - api
    environment:
      - API_URL=http://api:8000
    command: ["python", "simulator.py"]

volumes:
  pgdata1:
  pgdata2: